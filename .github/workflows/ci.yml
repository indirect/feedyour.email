# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB: rails_test
      USER: rails
      PASSWORD: password
      PORT: 5432
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "${{env.PORT}}:${{env.PORT}}"
        env:
          POSTGRES_DB: ${{env.DB}}
          POSTGRES_USER: ${{env.USER}}
          POSTGRES_PASSWORD: ${{env.PASSWORD}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@180e1d1f1c5eadbfbab3dab6fb79ab0c07e3cecc
        with:
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
        env:
          RAILS_ENV: test
          DATABASE_URL: "postgres://${{env.USER}}:${{env.PASSWORD}}@localhost:${{env.PORT}}/${{env.DB}}"
      # Add or replace test runners here
      - name: Run tests
        run: bin/rake
        env:
          RAILS_ENV: test
          DATABASE_URL: "postgres://${{env.USER}}:${{env.PASSWORD}}@localhost:${{env.PORT}}/${{env.DB}}"

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bin/bundler-audit --update
      - name: Security audit application code
        run: bin/brakeman -q -w2
      - name: Lint Ruby files
        run: bin/rubocop --parallel
