name: CI
on:
  push:
    branches: [ "**", "!dependabot/**" ]
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Set up database
        run: bin/rails db:schema:load
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://rails:password@localhost:5432/rails_test
      - name: Run tests
        run: bin/rake assets:precompile spec
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://rails:password@localhost:5432/rails_test
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Create results directory
        run: mkdir -p tmp/sarif
      - name: Audit dependencies
        run: bin/bundler-audit --update
        if: always()
      - name: Rubocop code scan
        id: rubocop
        run: bin/rubocop --require code_scanning --format CodeScanning::SarifFormatter -o tmp/sarif/rubocop.sarif --format clang
        if: always()
      - name: Lint ERB files
        run: bin/erblint --lint-all
        if: always()
      - name: Brakeman code scan
        id: brakeman
        run: bin/brakeman -q -w2 -o tmp/sarif/brakeman.sarif -o /dev/stdout --color
        if: always()
      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: tmp/sarif
  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --build-arg "GIT_SHA=${{ github.sha }}"
        env:
          FLY_APP: feedyouremail
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
